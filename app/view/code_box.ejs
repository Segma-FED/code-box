<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible"
          content="ie=edge">
    <title>Segma Code Box</title>
    <style>
    * {
        margin: 0;
        padding: 0;
    }

    .container, body, html {
        width: 100%;
        height: 100%;
        overflow: hidden;
        display: flex;
        background: #1E1E1E;
        font-family: 'Microsoft YaHei UI'
    }

    .left {
        transition: all 0.2s;
        width: 60%;
        height: 100%;
    }

    .right {
        transition: all 0.2s;
        width: 40%;
        height: 100%;
        position: relative;
    }

    .container.right-shrink .left {
        width: 100%;
    }

    .container.right-shrink .right {
        width: 0;
    }

    .container.right-shrink .works-menu.left-item {
        display: inline-block;
    }

    .container.right-shrink .works-menu.right-item {
        display: none;
    }

    .works-menu.left-item {
        display: none;
    }

    .works-menu.right-item {
        display: inline-block;
    }

    .container.right-shrink .works-menu-wrapper {
        opacity: 1;
        left: -40px;
    }

    .container.right-shrink .right:hover .works-menu-wrapper {
        transform: translateX(-5px);
        opacity: 1;
    }


    iframe {
        width: 100%;
        height: 100%;
    }

    .right-top {
        min-width: 600px;
        overflow: hidden;
        height: 35px;
        display: flex;
        justify-content: space-between;
    }

    .right-content {
        height: calc(100% - 35px);
        background: #fff;
    }

    /* 箭头按钮样式 */
    .works-menu-wrapper {
        transform: translateX(0px);
        transition: all 0.25s;
        opacity: 0;
        user-select: none;
        position: absolute;
        left: 0;
        top: 45%;
        z-index: 1000;
        width: 30px;
        height: 30px;
        overflow: hidden;
    }

    .works-menu {
        position: absolute;
        left: 4px;
        top: 4px;
        display: inline-block;
        background-color: #f4dc96;
        cursor: pointer;
        width: 20px;
        height: 20px;
        border: 1px solid #2c3e50;
        border-radius: 50%;
        z-index: 1000;
        -webkit-transition: all .2s ease-in-out;

    }

    .works-menu:hover {
        background: #f6e4b1;
        -webkit-transform: scale(1.1);
        -ms-transform: scale(1.1);
        transform: scale(1.1);
    }

    .works-menu .arrow-left {
        width: 7px;
        height: 7px;
        margin: 35% 40%;
        box-shadow: 1px -1px 0 0px #2c3e50 inset;
        background-color: transparent;
        -webkit-transform: rotate(45deg);
    }

    .works-menu .arrow-right {

        width: 7px;
        height: 7px;
        margin: 35% 30%;
        box-shadow: 1px -1px 0 0px #2c3e50 inset;
        background-color: transparent;
        -webkit-transform: rotate(225deg);
        /*-ms-transform: scale(225deg);
        transform: scale(225deg);*/
    }

    /* 按钮样式 */
    .animate {
        transition: all 0.1s;
        -webkit-transition: all 0.1s;
    }

    .action-button {
        display: inline-block;
        position: relative;
        padding: 3px 10px;
        float: left;
        border-radius: 4px;
        font-size: 14px;
        color: #FFF;
        text-decoration: none;
        margin-left: 10px;
        margin-top: 2px;
    }

    .blue {
        background-color: #3498DB;
        border-bottom: 5px solid #2980B9;
        text-shadow: 0px -2px #2980B9;
    }

    .red {
        background-color: #E74C3C;
        border-bottom: 5px solid #BD3E31;
        text-shadow: 0px -2px #BD3E31;
    }

    .green {
        background-color: #82BF56;
        border-bottom: 5px solid #669644;
        text-shadow: 0px -2px #669644;
    }

    .yellow {
        background-color: #F2CF66;
        border-bottom: 5px solid #D1B358;
        text-shadow: 0px -2px #D1B358;
    }

    .action-button:active {
        transform: translate(0px, 5px);
        -webkit-transform: translate(0px, 5px);
        border-bottom: 1px solid;
    }

    .right:hover .works-menu-wrapper {
        transform: translateX(5px);
        opacity: 1;
    }
    </style>
</head>
<body>
<div class="container"
     id="container">
    <div class="left">
        <iframe id="editorFrame"
                src="<%= editorUrl %>"
                frameborder="no"
                border="0"></iframe>
    </div>
    <div class="right">
        <div class="works-menu-wrapper">
            <div class="works-menu left-item"
                 onclick="handlePageOpen()"
                 title="展开页面">
                <div class="arrow-left">
                </div>
            </div>
            <div class="works-menu right-item"
                 onclick="handlePageHide()"
                 title="收起页面">
                <div class="arrow-right">
                </div>
            </div>
        </div>

        <div class="right-top">
            <div class="start">
                <a href="javascript:void(0)"
                   class="action-button animate yellow"
                   onclick="reloadEditor()">刷新编辑器</a>

            </div>
            <div class="end">
                <a href="javascript:void(0)"
                   class="action-button animate yellow"
                   onclick="reloadPage()">刷新页面</a>
                <a href="javascript:void(0)"
                   class="action-button animate yellow"
                   onclick="openNew()">新窗口打开</a>
            </div>
        </div>
        <div class="right-content">
            <iframe id="pageFrame"
                    src="<%= pageUrl %>"
                    frameborder="no"
                    border="0"></iframe>
        </div>
    </div>
</div>
<script>
const reload = (El, src = '') => {
  El.src = src || El.src
}

/**
 * 刷新编辑器页面
 * */
const reloadEditor = () => {
  reload(document.getElementById('editorFrame'))
}

/**
 * 刷新预览页面
 * */
const reloadPage = () => {
  reload(document.getElementById('pageFrame'), window.pageHref)
}

/**
 * 预览页面 从新窗口打开
 * */
const openNew = () => {
  window.open(window.pageHref)
  handlePageHide();
}

/**
 * 获取代码最新更改时间
 * */
const getLastModifyTime = async () => {
  let res = await fetch('/api/get-last-modify-time')
  return await res.json();
}

/**
 * 自动刷新页面
 * */
const autoRefresh = async () => {
  try {
    let newTime = await getLastModifyTime()
    if (newTime !== window.lastModifyTime) {
      setTimeout(() => {
        reloadPage();
      }, 1000)
    }
    window.lastModifyTime = newTime;
    setTimeout(() => {
      autoRefresh();
    }, 2000)
  } catch (e) {
    console.log('autoRefresh', e)
  }
}

/**
 * 收起页面
 * */
const handlePageHide = () => {
  let container = document.getElementById('container')
  container.classList.add("right-shrink");
}

/**
 * 展开页面
 * */
const handlePageOpen = () => {
  let container = document.getElementById('container')
  container.classList.remove("right-shrink");
}

/**
 * 接受子页面的地址参数
 * */
const receiveMessage = (event) => {
  window.pageHref = window.pageOrigin + event && event.data && event.data.pathname
  console.log('window.pageHref', window.pageHref)
}

/**
 * 页面初始化完成
 * */
window.onload = async () => {
  autoRefresh();
  window.pageOrigin = '<%= pageUrl %>'
  window.addEventListener("message", receiveMessage, false);
}
</script>
</body>
</html>
